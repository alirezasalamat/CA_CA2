# @                   0: PC::RESET; PC is now 0
# @                   0: INST_MEM: data at address          0 is read
# @                   0: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                   0: ALU_CTRL::RTYPE: func = 32
# @                   0: ALU::ADD: a =          0, b =          0
# @                 100: PC is now          4
# @                 100: REG_FILE::WRITE: value          0 stored in register  1
# @                 100: INST_MEM: data at address          4 is read
# @                 200: PC is now          8
# @                 200: REG_FILE::WRITE: value          0 stored in register  2
# @                 200: INST_MEM: data at address          8 is read
# @                 200: REG_FILE::READ: registers  0 =          0,  3 =          0 are read
# @                 200: ALU::ADD: a =          0, b =         10
# @                 300: PC is now         12
# @                 300: REG_FILE::WRITE: value         10 stored in register  3
# @                 300: INST_MEM: data at address         12 is read
# @                 300: REG_FILE::READ: registers  0 =          0,  3 =         10 are read
# @                 300: REG_FILE::READ: registers  1 =          0, 10 =          0 are read
# @                 300: ALU::ADD: a =          0, b =       1000
# @                 300: ALU_CTRL::MTYPE
# @                 300: DATA_MEM::READ: value          0 at address    10 is read
# @                 300: DATA_MEM::READ: value          0 at address  1000 is read
# @                 400: PC is now         16
# @                 400: REG_FILE::WRITE: value          0 stored in register 10
# @                 400: INST_MEM: data at address         16 is read
# @                 400: REG_FILE::READ: registers  2 =          0, 10 =          0 are read
# @                 400: ALU::ADD: a =          0, b =       4128
# @                 400: ALU_CTRL::RTYPE: func = 32
# @                 400: ALU::ADD: a =          0, b =          0
# @                 500: PC is now         20
# @                 500: REG_FILE::WRITE: value          0 stored in register  2
# @                 500: INST_MEM: data at address         20 is read
# @                 500: REG_FILE::READ: registers  1 =          0,  1 =          0 are read
# @                 500: ALU::ADD: a =          0, b =          1
# @                 600: PC is now         24
# @                 600: REG_FILE::WRITE: value          1 stored in register  1
# @                 600: INST_MEM: data at address         24 is read
# @                 600: REG_FILE::READ: registers  1 =          1,  1 =          1 are read
# @                 600: REG_FILE::READ: registers  1 =          1,  3 =         10 are read
# @                 600: ALU::ADD: a =          1, b =          1
# @                 600: ALU::ADD: a =          1, b =       8234
# @                 600: ALU_CTRL::RTYPE: func = 42
# @                 600: ALU::SLT: a =          1, b =         10
# @                 700: PC is now         28
# @                 700: REG_FILE::WRITE: value          1 stored in register  4
# @                 700: INST_MEM: data at address         28 is read
# @                 700: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                 700: ALU::SLT: a =          1, b =          0
# @                 700: ALU_CTRL::BTYPE
# @                 700: ALU::SUB: a =          1, b =          0
# @                 800: PC is now         32
# @                 800: INST_MEM: data at address         32 is read
# @                 800: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                 800: ALU::SUB: a =          0, b =          0
# @                 800: ALU_CTRL::JTYPE
# @                 900: PC is now         12
# @                 900: INST_MEM: data at address         12 is read
# @                 900: REG_FILE::READ: registers  1 =          1, 10 =          0 are read
# @                 900: ALU_CTRL::MTYPE
# @                 900: DATA_MEM::READ: value          x at address     z is read
# @                 900: ALU::ADD: a =          1, b =       1000
# @                 900: DATA_MEM::READ: value          1 at address  1001 is read
# @                1000: PC is now         16
# @                1000: REG_FILE::WRITE: value          1 stored in register 10
# @                1000: INST_MEM: data at address         16 is read
# @                1000: REG_FILE::READ: registers  1 =          1, 10 =          1 are read
# @                1000: REG_FILE::READ: registers  2 =          0, 10 =          1 are read
# @                1000: ALU::ADD: a =          0, b =       1000
# @                1000: ALU::ADD: a =          0, b =       4128
# @                1000: ALU_CTRL::RTYPE: func = 32
# @                1000: ALU::ADD: a =          0, b =          1
# @                1100: PC is now         20
# @                1100: REG_FILE::WRITE: value          1 stored in register  2
# @                1100: INST_MEM: data at address         20 is read
# @                1100: REG_FILE::READ: registers  2 =          1, 10 =          1 are read
# @                1100: REG_FILE::READ: registers  1 =          1,  1 =          1 are read
# @                1100: ALU::ADD: a =          1, b =          1
# @                1200: PC is now         24
# @                1200: REG_FILE::WRITE: value          2 stored in register  1
# @                1200: INST_MEM: data at address         24 is read
# @                1200: REG_FILE::READ: registers  1 =          2,  1 =          2 are read
# @                1200: REG_FILE::READ: registers  1 =          2,  3 =         10 are read
# @                1200: ALU::ADD: a =          2, b =          1
# @                1200: ALU::ADD: a =          2, b =       8234
# @                1200: ALU_CTRL::RTYPE: func = 42
# @                1200: ALU::SLT: a =          2, b =         10
# @                1300: PC is now         28
# @                1300: REG_FILE::WRITE: value          1 stored in register  4
# @                1300: INST_MEM: data at address         28 is read
# @                1300: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                1300: ALU::SLT: a =          1, b =         10
# @                1300: ALU::SLT: a =          1, b =          0
# @                1300: ALU_CTRL::BTYPE
# @                1300: ALU::SUB: a =          1, b =          0
# @                1400: PC is now         32
# @                1400: INST_MEM: data at address         32 is read
# @                1400: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                1400: ALU::SUB: a =          0, b =          0
# @                1400: ALU_CTRL::JTYPE
# @                1500: PC is now         12
# @                1500: INST_MEM: data at address         12 is read
# @                1500: REG_FILE::READ: registers  1 =          2, 10 =          1 are read
# @                1500: ALU_CTRL::MTYPE
# @                1500: DATA_MEM::READ: value          x at address     z is read
# @                1500: ALU::ADD: a =          2, b =       1000
# @                1500: DATA_MEM::READ: value          2 at address  1002 is read
# @                1600: PC is now         16
# @                1600: REG_FILE::WRITE: value          2 stored in register 10
# @                1600: INST_MEM: data at address         16 is read
# @                1600: REG_FILE::READ: registers  1 =          2, 10 =          2 are read
# @                1600: REG_FILE::READ: registers  2 =          1, 10 =          2 are read
# @                1600: ALU::ADD: a =          1, b =       1000
# @                1600: ALU::ADD: a =          1, b =       4128
# @                1600: ALU_CTRL::RTYPE: func = 32
# @                1600: ALU::ADD: a =          1, b =          2
# @                1700: PC is now         20
# @                1700: REG_FILE::WRITE: value          3 stored in register  2
# @                1700: INST_MEM: data at address         20 is read
# @                1700: REG_FILE::READ: registers  2 =          3, 10 =          2 are read
# @                1700: REG_FILE::READ: registers  1 =          2,  1 =          2 are read
# @                1700: ALU::ADD: a =          3, b =          2
# @                1700: ALU::ADD: a =          2, b =          2
# @                1700: ALU::ADD: a =          2, b =          1
# @                1800: PC is now         24
# @                1800: REG_FILE::WRITE: value          3 stored in register  1
# @                1800: INST_MEM: data at address         24 is read
# @                1800: REG_FILE::READ: registers  1 =          3,  1 =          3 are read
# @                1800: REG_FILE::READ: registers  1 =          3,  3 =         10 are read
# @                1800: ALU::ADD: a =          3, b =          1
# @                1800: ALU::ADD: a =          3, b =       8234
# @                1800: ALU_CTRL::RTYPE: func = 42
# @                1800: ALU::SLT: a =          3, b =         10
# @                1900: PC is now         28
# @                1900: REG_FILE::WRITE: value          1 stored in register  4
# @                1900: INST_MEM: data at address         28 is read
# @                1900: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                1900: ALU::SLT: a =          1, b =         10
# @                1900: ALU::SLT: a =          1, b =          0
# @                1900: ALU_CTRL::BTYPE
# @                1900: ALU::SUB: a =          1, b =          0
# @                2000: PC is now         32
# @                2000: INST_MEM: data at address         32 is read
# @                2000: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                2000: ALU::SUB: a =          0, b =          0
# @                2000: ALU_CTRL::JTYPE
# @                2100: PC is now         12
# @                2100: INST_MEM: data at address         12 is read
# @                2100: REG_FILE::READ: registers  1 =          3, 10 =          2 are read
# @                2100: ALU_CTRL::MTYPE
# @                2100: DATA_MEM::READ: value          x at address     z is read
# @                2100: ALU::ADD: a =          3, b =       1000
# @                2100: DATA_MEM::READ: value          3 at address  1003 is read
# @                2200: PC is now         16
# @                2200: REG_FILE::WRITE: value          3 stored in register 10
# @                2200: INST_MEM: data at address         16 is read
# @                2200: REG_FILE::READ: registers  1 =          3, 10 =          3 are read
# @                2200: REG_FILE::READ: registers  2 =          3, 10 =          3 are read
# @                2200: ALU::ADD: a =          3, b =       4128
# @                2200: ALU_CTRL::RTYPE: func = 32
# @                2200: ALU::ADD: a =          3, b =          3
# @                2300: PC is now         20
# @                2300: REG_FILE::WRITE: value          6 stored in register  2
# @                2300: INST_MEM: data at address         20 is read
# @                2300: REG_FILE::READ: registers  2 =          6, 10 =          3 are read
# @                2300: REG_FILE::READ: registers  1 =          3,  1 =          3 are read
# @                2300: ALU::ADD: a =          6, b =          3
# @                2300: ALU::ADD: a =          3, b =          3
# @                2300: ALU::ADD: a =          3, b =          1
# @                2400: PC is now         24
# @                2400: REG_FILE::WRITE: value          4 stored in register  1
# @                2400: INST_MEM: data at address         24 is read
# @                2400: REG_FILE::READ: registers  1 =          4,  1 =          4 are read
# @                2400: REG_FILE::READ: registers  1 =          4,  3 =         10 are read
# @                2400: ALU::ADD: a =          4, b =          1
# @                2400: ALU::ADD: a =          4, b =       8234
# @                2400: ALU_CTRL::RTYPE: func = 42
# @                2400: ALU::SLT: a =          4, b =         10
# @                2500: PC is now         28
# @                2500: REG_FILE::WRITE: value          1 stored in register  4
# @                2500: INST_MEM: data at address         28 is read
# @                2500: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                2500: ALU::SLT: a =          1, b =         10
# @                2500: ALU::SLT: a =          1, b =          0
# @                2500: ALU_CTRL::BTYPE
# @                2500: ALU::SUB: a =          1, b =          0
# @                2600: PC is now         32
# @                2600: INST_MEM: data at address         32 is read
# @                2600: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                2600: ALU::SUB: a =          0, b =          0
# @                2600: ALU_CTRL::JTYPE
# @                2700: PC is now         12
# @                2700: INST_MEM: data at address         12 is read
# @                2700: REG_FILE::READ: registers  1 =          4, 10 =          3 are read
# @                2700: ALU_CTRL::MTYPE
# @                2700: DATA_MEM::READ: value          x at address     z is read
# @                2700: ALU::ADD: a =          4, b =       1000
# @                2700: DATA_MEM::READ: value          4 at address  1004 is read
# @                2800: PC is now         16
# @                2800: REG_FILE::WRITE: value          4 stored in register 10
# @                2800: INST_MEM: data at address         16 is read
# @                2800: REG_FILE::READ: registers  1 =          4, 10 =          4 are read
# @                2800: REG_FILE::READ: registers  2 =          6, 10 =          4 are read
# @                2800: ALU::ADD: a =          6, b =       1000
# @                2800: ALU::ADD: a =          6, b =       4128
# @                2800: ALU_CTRL::RTYPE: func = 32
# @                2800: ALU::ADD: a =          6, b =          4
# @                2900: PC is now         20
# @                2900: REG_FILE::WRITE: value         10 stored in register  2
# @                2900: INST_MEM: data at address         20 is read
# @                2900: REG_FILE::READ: registers  2 =         10, 10 =          4 are read
# @                2900: REG_FILE::READ: registers  1 =          4,  1 =          4 are read
# @                2900: ALU::ADD: a =         10, b =          4
# @                2900: ALU::ADD: a =          4, b =          4
# @                2900: ALU::ADD: a =          4, b =          1
# @                3000: PC is now         24
# @                3000: REG_FILE::WRITE: value          5 stored in register  1
# @                3000: INST_MEM: data at address         24 is read
# @                3000: REG_FILE::READ: registers  1 =          5,  1 =          5 are read
# @                3000: REG_FILE::READ: registers  1 =          5,  3 =         10 are read
# @                3000: ALU::ADD: a =          5, b =          1
# @                3000: ALU::ADD: a =          5, b =       8234
# @                3000: ALU_CTRL::RTYPE: func = 42
# @                3000: ALU::SLT: a =          5, b =         10
# @                3100: PC is now         28
# @                3100: REG_FILE::WRITE: value          1 stored in register  4
# @                3100: INST_MEM: data at address         28 is read
# @                3100: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                3100: ALU::SLT: a =          1, b =         10
# @                3100: ALU::SLT: a =          1, b =          0
# @                3100: ALU_CTRL::BTYPE
# @                3100: ALU::SUB: a =          1, b =          0
# @                3200: PC is now         32
# @                3200: INST_MEM: data at address         32 is read
# @                3200: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                3200: ALU::SUB: a =          0, b =          0
# @                3200: ALU_CTRL::JTYPE
# @                3300: PC is now         12
# @                3300: INST_MEM: data at address         12 is read
# @                3300: REG_FILE::READ: registers  1 =          5, 10 =          4 are read
# @                3300: ALU_CTRL::MTYPE
# @                3300: DATA_MEM::READ: value          x at address     z is read
# @                3300: ALU::ADD: a =          5, b =       1000
# @                3300: DATA_MEM::READ: value          5 at address  1005 is read
# @                3400: PC is now         16
# @                3400: REG_FILE::WRITE: value          5 stored in register 10
# @                3400: INST_MEM: data at address         16 is read
# @                3400: REG_FILE::READ: registers  1 =          5, 10 =          5 are read
# @                3400: REG_FILE::READ: registers  2 =         10, 10 =          5 are read
# @                3400: ALU::ADD: a =         10, b =       1000
# @                3400: ALU::ADD: a =         10, b =       4128
# @                3400: ALU_CTRL::RTYPE: func = 32
# @                3400: ALU::ADD: a =         10, b =          5
# @                3500: PC is now         20
# @                3500: REG_FILE::WRITE: value         15 stored in register  2
# @                3500: INST_MEM: data at address         20 is read
# @                3500: REG_FILE::READ: registers  2 =         15, 10 =          5 are read
# @                3500: REG_FILE::READ: registers  1 =          5,  1 =          5 are read
# @                3500: ALU::ADD: a =         15, b =          5
# @                3500: ALU::ADD: a =          5, b =          5
# @                3500: ALU::ADD: a =          5, b =          1
# @                3600: PC is now         24
# @                3600: REG_FILE::WRITE: value          6 stored in register  1
# @                3600: INST_MEM: data at address         24 is read
# @                3600: REG_FILE::READ: registers  1 =          6,  1 =          6 are read
# @                3600: REG_FILE::READ: registers  1 =          6,  3 =         10 are read
# @                3600: ALU::ADD: a =          6, b =          1
# @                3600: ALU::ADD: a =          6, b =       8234
# @                3600: ALU_CTRL::RTYPE: func = 42
# @                3600: ALU::SLT: a =          6, b =         10
# @                3700: PC is now         28
# @                3700: REG_FILE::WRITE: value          1 stored in register  4
# @                3700: INST_MEM: data at address         28 is read
# @                3700: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                3700: ALU::SLT: a =          1, b =         10
# @                3700: ALU::SLT: a =          1, b =          0
# @                3700: ALU_CTRL::BTYPE
# @                3700: ALU::SUB: a =          1, b =          0
# @                3800: PC is now         32
# @                3800: INST_MEM: data at address         32 is read
# @                3800: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                3800: ALU::SUB: a =          0, b =          0
# @                3800: ALU_CTRL::JTYPE
# @                3900: PC is now         12
# @                3900: INST_MEM: data at address         12 is read
# @                3900: REG_FILE::READ: registers  1 =          6, 10 =          5 are read
# @                3900: ALU_CTRL::MTYPE
# @                3900: DATA_MEM::READ: value          x at address     z is read
# @                3900: ALU::ADD: a =          6, b =       1000
# @                3900: DATA_MEM::READ: value          6 at address  1006 is read
# @                4000: PC is now         16
# @                4000: REG_FILE::WRITE: value          6 stored in register 10
# @                4000: INST_MEM: data at address         16 is read
# @                4000: REG_FILE::READ: registers  1 =          6, 10 =          6 are read
# @                4000: REG_FILE::READ: registers  2 =         15, 10 =          6 are read
# @                4000: ALU::ADD: a =         15, b =       1000
# @                4000: ALU::ADD: a =         15, b =       4128
# @                4000: ALU_CTRL::RTYPE: func = 32
# @                4000: ALU::ADD: a =         15, b =          6
# @                4100: PC is now         20
# @                4100: REG_FILE::WRITE: value         21 stored in register  2
# @                4100: INST_MEM: data at address         20 is read
# @                4100: REG_FILE::READ: registers  2 =         21, 10 =          6 are read
# @                4100: REG_FILE::READ: registers  1 =          6,  1 =          6 are read
# @                4100: ALU::ADD: a =         21, b =          6
# @                4100: ALU::ADD: a =          6, b =          6
# @                4100: ALU::ADD: a =          6, b =          1
# @                4200: PC is now         24
# @                4200: REG_FILE::WRITE: value          7 stored in register  1
# @                4200: INST_MEM: data at address         24 is read
# @                4200: REG_FILE::READ: registers  1 =          7,  1 =          7 are read
# @                4200: REG_FILE::READ: registers  1 =          7,  3 =         10 are read
# @                4200: ALU::ADD: a =          7, b =          1
# @                4200: ALU::ADD: a =          7, b =       8234
# @                4200: ALU_CTRL::RTYPE: func = 42
# @                4200: ALU::SLT: a =          7, b =         10
# @                4300: PC is now         28
# @                4300: REG_FILE::WRITE: value          1 stored in register  4
# @                4300: INST_MEM: data at address         28 is read
# @                4300: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                4300: ALU::SLT: a =          1, b =         10
# @                4300: ALU::SLT: a =          1, b =          0
# @                4300: ALU_CTRL::BTYPE
# @                4300: ALU::SUB: a =          1, b =          0
# @                4400: PC is now         32
# @                4400: INST_MEM: data at address         32 is read
# @                4400: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                4400: ALU::SUB: a =          0, b =          0
# @                4400: ALU_CTRL::JTYPE
# @                4500: PC is now         12
# @                4500: INST_MEM: data at address         12 is read
# @                4500: REG_FILE::READ: registers  1 =          7, 10 =          6 are read
# @                4500: ALU_CTRL::MTYPE
# @                4500: DATA_MEM::READ: value          x at address     z is read
# @                4500: ALU::ADD: a =          7, b =       1000
# @                4500: DATA_MEM::READ: value          7 at address  1007 is read
# @                4600: PC is now         16
# @                4600: REG_FILE::WRITE: value          7 stored in register 10
# @                4600: INST_MEM: data at address         16 is read
# @                4600: REG_FILE::READ: registers  1 =          7, 10 =          7 are read
# @                4600: REG_FILE::READ: registers  2 =         21, 10 =          7 are read
# @                4600: ALU::ADD: a =         21, b =       1000
# @                4600: ALU::ADD: a =         21, b =       4128
# @                4600: ALU_CTRL::RTYPE: func = 32
# @                4600: ALU::ADD: a =         21, b =          7
# @                4700: PC is now         20
# @                4700: REG_FILE::WRITE: value         28 stored in register  2
# @                4700: INST_MEM: data at address         20 is read
# @                4700: REG_FILE::READ: registers  2 =         28, 10 =          7 are read
# @                4700: REG_FILE::READ: registers  1 =          7,  1 =          7 are read
# @                4700: ALU::ADD: a =         28, b =          7
# @                4700: ALU::ADD: a =          7, b =          7
# @                4700: ALU::ADD: a =          7, b =          1
# @                4800: PC is now         24
# @                4800: REG_FILE::WRITE: value          8 stored in register  1
# @                4800: INST_MEM: data at address         24 is read
# @                4800: REG_FILE::READ: registers  1 =          8,  1 =          8 are read
# @                4800: REG_FILE::READ: registers  1 =          8,  3 =         10 are read
# @                4800: ALU::ADD: a =          8, b =          1
# @                4800: ALU::ADD: a =          8, b =       8234
# @                4800: ALU_CTRL::RTYPE: func = 42
# @                4800: ALU::SLT: a =          8, b =         10
# @                4900: PC is now         28
# @                4900: REG_FILE::WRITE: value          1 stored in register  4
# @                4900: INST_MEM: data at address         28 is read
# @                4900: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                4900: ALU::SLT: a =          1, b =         10
# @                4900: ALU::SLT: a =          1, b =          0
# @                4900: ALU_CTRL::BTYPE
# @                4900: ALU::SUB: a =          1, b =          0
# @                5000: PC is now         32
# @                5000: INST_MEM: data at address         32 is read
# @                5000: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                5000: ALU::SUB: a =          0, b =          0
# @                5000: ALU_CTRL::JTYPE
# @                5100: PC is now         12
# @                5100: INST_MEM: data at address         12 is read
# @                5100: REG_FILE::READ: registers  1 =          8, 10 =          7 are read
# @                5100: ALU_CTRL::MTYPE
# @                5100: DATA_MEM::READ: value          x at address     z is read
# @                5100: ALU::ADD: a =          8, b =       1000
# @                5100: DATA_MEM::READ: value          8 at address  1008 is read
# @                5200: PC is now         16
# @                5200: REG_FILE::WRITE: value          8 stored in register 10
# @                5200: INST_MEM: data at address         16 is read
# @                5200: REG_FILE::READ: registers  1 =          8, 10 =          8 are read
# @                5200: REG_FILE::READ: registers  2 =         28, 10 =          8 are read
# @                5200: ALU::ADD: a =         28, b =       1000
# @                5200: ALU::ADD: a =         28, b =       4128
# @                5200: ALU_CTRL::RTYPE: func = 32
# @                5200: ALU::ADD: a =         28, b =          8
# @                5300: PC is now         20
# @                5300: REG_FILE::WRITE: value         36 stored in register  2
# @                5300: INST_MEM: data at address         20 is read
# @                5300: REG_FILE::READ: registers  2 =         36, 10 =          8 are read
# @                5300: REG_FILE::READ: registers  1 =          8,  1 =          8 are read
# @                5300: ALU::ADD: a =         36, b =          8
# @                5300: ALU::ADD: a =          8, b =          8
# @                5300: ALU::ADD: a =          8, b =          1
# @                5400: PC is now         24
# @                5400: REG_FILE::WRITE: value          9 stored in register  1
# @                5400: INST_MEM: data at address         24 is read
# @                5400: REG_FILE::READ: registers  1 =          9,  1 =          9 are read
# @                5400: REG_FILE::READ: registers  1 =          9,  3 =         10 are read
# @                5400: ALU::ADD: a =          9, b =          1
# @                5400: ALU::ADD: a =          9, b =       8234
# @                5400: ALU_CTRL::RTYPE: func = 42
# @                5400: ALU::SLT: a =          9, b =         10
# @                5500: PC is now         28
# @                5500: REG_FILE::WRITE: value          1 stored in register  4
# @                5500: INST_MEM: data at address         28 is read
# @                5500: REG_FILE::READ: registers  4 =          1,  0 =          0 are read
# @                5500: ALU::SLT: a =          1, b =         10
# @                5500: ALU::SLT: a =          1, b =          0
# @                5500: ALU_CTRL::BTYPE
# @                5500: ALU::SUB: a =          1, b =          0
# @                5600: PC is now         32
# @                5600: INST_MEM: data at address         32 is read
# @                5600: REG_FILE::READ: registers  0 =          0,  0 =          0 are read
# @                5600: ALU::SUB: a =          0, b =          0
# @                5600: ALU_CTRL::JTYPE
# @                5700: PC is now         12
# @                5700: INST_MEM: data at address         12 is read
# @                5700: REG_FILE::READ: registers  1 =          9, 10 =          8 are read
# @                5700: ALU_CTRL::MTYPE
# @                5700: DATA_MEM::READ: value          x at address     z is read
# @                5700: ALU::ADD: a =          9, b =       1000
# @                5700: DATA_MEM::READ: value          9 at address  1009 is read
# @                5800: PC is now         16
# @                5800: REG_FILE::WRITE: value          9 stored in register 10
# @                5800: INST_MEM: data at address         16 is read
# @                5800: REG_FILE::READ: registers  1 =          9, 10 =          9 are read
# @                5800: REG_FILE::READ: registers  2 =         36, 10 =          9 are read
# @                5800: ALU::ADD: a =         36, b =       1000
# @                5800: ALU::ADD: a =         36, b =       4128
# @                5800: ALU_CTRL::RTYPE: func = 32
# @                5800: ALU::ADD: a =         36, b =          9
# @                5900: PC is now         20
# @                5900: REG_FILE::WRITE: value         45 stored in register  2
# @                5900: INST_MEM: data at address         20 is read
# @                5900: REG_FILE::READ: registers  2 =         45, 10 =          9 are read
# @                5900: REG_FILE::READ: registers  1 =          9,  1 =          9 are read
# @                5900: ALU::ADD: a =         45, b =          9
# @                5900: ALU::ADD: a =          9, b =          9
# @                5900: ALU::ADD: a =          9, b =          1
# @                6000: PC is now         24
# @                6000: REG_FILE::WRITE: value         10 stored in register  1
# @                6000: INST_MEM: data at address         24 is read
# @                6000: REG_FILE::READ: registers  1 =         10,  1 =         10 are read
# @                6000: REG_FILE::READ: registers  1 =         10,  3 =         10 are read
# @                6000: ALU::ADD: a =         10, b =          1
# @                6000: ALU::ADD: a =         10, b =       8234
# @                6000: ALU_CTRL::RTYPE: func = 42
# @                6000: ALU::SLT: a =         10, b =         10
# @                6100: PC is now         28
# @                6100: REG_FILE::WRITE: value          0 stored in register  4
# @                6100: INST_MEM: data at address         28 is read
# @                6100: REG_FILE::READ: registers  4 =          0,  0 =          0 are read
# @                6100: ALU::SLT: a =          0, b =         10
# @                6100: ALU::SLT: a =          0, b =          0
# @                6100: ALU_CTRL::BTYPE
# @                6100: ALU::SUB: a =          0, b =          0
# @                6200: PC is now         36
# @                6200: INST_MEM: data at address         36 is read
# @                6200: REG_FILE::READ: registers  0 =          0,  2 =         45 are read
# @                6200: ALU::SUB: a =          0, b =         45
# @                6200: ALU_CTRL::MTYPE
# @                6200: ALU::ADD: a =          0, b =       2000
# @                6300: PC is now         40
# @                6300: DATA_MEM::WRITE: value         45 stored at address  2000
# @                6300: INST_MEM: data at address         40 is read
# @                6300: REG_FILE::READ: registers  x =          x,  x =          x are read
# @                6300: ALU::ADD: a =          x, b =       2000
# @                6300: ALU::ADD: a =          x, b =          x